---
- name: Inspect mongod process before force stop
  shell: "ps aux | grep mongo; systemctl status {{ mongod_service }}"
  failed_when: no
  changed_when: no
  register: _status_task
- debug:
    var: _status_task

- name: Force stop mongo (forking w/o pidfile means systemd cannot restart mongod safely)
  block:
    - name: Force stop mongod
      shell: pkill -e mongod
      # 0 = one or more process matched
      # 1 = no processes matched (nothing to kill)
      changed_when: _pkill_task.rc == 0
      failed_when: _pkill_task.rc > 1
      register: _pkill_task
    - debug:
        var: _pkill_task

- name: Inspect mongod process after force stop
  shell: "ps aux | grep mongo; systemctl status {{ mongod_service }}"
  failed_when: no
  changed_when: no
  register: _status_task
- debug:
    var: _status_task

#- name: Restart mongod in docker
#  block:
#    - name: Restart mongod in docker
#      service:
#        name: mongod
#        state: started
#      register: _service_task
#  recover:
#    - name: Force stop mongod (try again)
#      shell: pkill -e mongod
#      register: _pkill_task
#    - debug:
#        var: _pkill_task
#    - name: Restart mongod in docker (try again)
#      service:
#        name: mongod
#        state: started
#      until: _service_task is succeeded
#      retries: 3
#      delay: 5
#  always:
#    - name: Inspect mongod service
#      command: systemctl status mongod
#      register: _status_task
#    - debug:
#        var: _status_task

#- name: Wait for mongod to become active
#  wait_for:
#    port: "{{ mongod_port }}"
#    delay: 10
